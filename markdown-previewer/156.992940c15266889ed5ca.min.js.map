{"version":3,"file":"156.992940c15266889ed5ca.min.js","mappings":"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","sources":["webpack://markdown-previewer/./node_modules/dompurify/dist/purify.min.js","webpack://markdown-previewer/./node_modules/prismjs/prism.js","webpack://markdown-previewer/./node_modules/marked/lib/marked.esm.js"],"sourcesContent":["/*! @license DOMPurify 2.4.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.5/LICENSE */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).DOMPurify=t()}(this,(function(){\"use strict\";function e(t){return e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},e(t)}function t(e,n){return t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},t(e,n)}function n(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function r(e,o,a){return r=n()?Reflect.construct:function(e,n,r){var o=[null];o.push.apply(o,n);var a=new(Function.bind.apply(e,o));return r&&t(a,r.prototype),a},r.apply(null,arguments)}function o(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return a(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var i=Object.hasOwnProperty,l=Object.setPrototypeOf,c=Object.isFrozen,u=Object.getPrototypeOf,s=Object.getOwnPropertyDescriptor,m=Object.freeze,f=Object.seal,p=Object.create,d=\"undefined\"!=typeof Reflect&&Reflect,h=d.apply,g=d.construct;h||(h=function(e,t,n){return e.apply(t,n)}),m||(m=function(e){return e}),f||(f=function(e){return e}),g||(g=function(e,t){return r(e,o(t))});var y,b=L(Array.prototype.forEach),T=L(Array.prototype.pop),v=L(Array.prototype.push),N=L(String.prototype.toLowerCase),E=L(String.prototype.toString),A=L(String.prototype.match),w=L(String.prototype.replace),S=L(String.prototype.indexOf),_=L(String.prototype.trim),x=L(RegExp.prototype.test),k=(y=TypeError,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return g(y,t)});function L(e){return function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return h(e,t,r)}}function O(e,t,n){n=n||N,l&&l(e,null);for(var r=t.length;r--;){var o=t[r];if(\"string\"==typeof o){var a=n(o);a!==o&&(c(t)||(t[r]=a),o=a)}e[o]=!0}return e}function D(e){var t,n=p(null);for(t in e)!0===h(i,e,[t])&&(n[t]=e[t]);return n}function M(e,t){for(;null!==e;){var n=s(e,t);if(n){if(n.get)return L(n.get);if(\"function\"==typeof n.value)return L(n.value)}e=u(e)}return function(e){return console.warn(\"fallback value for\",e),null}}var R=m([\"a\",\"abbr\",\"acronym\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"bdi\",\"bdo\",\"big\",\"blink\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"center\",\"cite\",\"code\",\"col\",\"colgroup\",\"content\",\"data\",\"datalist\",\"dd\",\"decorator\",\"del\",\"details\",\"dfn\",\"dialog\",\"dir\",\"div\",\"dl\",\"dt\",\"element\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"font\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"img\",\"input\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meter\",\"nav\",\"nobr\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"section\",\"select\",\"shadow\",\"small\",\"source\",\"spacer\",\"span\",\"strike\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"template\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\",\"tt\",\"u\",\"ul\",\"var\",\"video\",\"wbr\"]),C=m([\"svg\",\"a\",\"altglyph\",\"altglyphdef\",\"altglyphitem\",\"animatecolor\",\"animatemotion\",\"animatetransform\",\"circle\",\"clippath\",\"defs\",\"desc\",\"ellipse\",\"filter\",\"font\",\"g\",\"glyph\",\"glyphref\",\"hkern\",\"image\",\"line\",\"lineargradient\",\"marker\",\"mask\",\"metadata\",\"mpath\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialgradient\",\"rect\",\"stop\",\"style\",\"switch\",\"symbol\",\"text\",\"textpath\",\"title\",\"tref\",\"tspan\",\"view\",\"vkern\"]),I=m([\"feBlend\",\"feColorMatrix\",\"feComponentTransfer\",\"feComposite\",\"feConvolveMatrix\",\"feDiffuseLighting\",\"feDisplacementMap\",\"feDistantLight\",\"feFlood\",\"feFuncA\",\"feFuncB\",\"feFuncG\",\"feFuncR\",\"feGaussianBlur\",\"feImage\",\"feMerge\",\"feMergeNode\",\"feMorphology\",\"feOffset\",\"fePointLight\",\"feSpecularLighting\",\"feSpotLight\",\"feTile\",\"feTurbulence\"]),F=m([\"animate\",\"color-profile\",\"cursor\",\"discard\",\"fedropshadow\",\"font-face\",\"font-face-format\",\"font-face-name\",\"font-face-src\",\"font-face-uri\",\"foreignobject\",\"hatch\",\"hatchpath\",\"mesh\",\"meshgradient\",\"meshpatch\",\"meshrow\",\"missing-glyph\",\"script\",\"set\",\"solidcolor\",\"unknown\",\"use\"]),U=m([\"math\",\"menclose\",\"merror\",\"mfenced\",\"mfrac\",\"mglyph\",\"mi\",\"mlabeledtr\",\"mmultiscripts\",\"mn\",\"mo\",\"mover\",\"mpadded\",\"mphantom\",\"mroot\",\"mrow\",\"ms\",\"mspace\",\"msqrt\",\"mstyle\",\"msub\",\"msup\",\"msubsup\",\"mtable\",\"mtd\",\"mtext\",\"mtr\",\"munder\",\"munderover\"]),H=m([\"maction\",\"maligngroup\",\"malignmark\",\"mlongdiv\",\"mscarries\",\"mscarry\",\"msgroup\",\"mstack\",\"msline\",\"msrow\",\"semantics\",\"annotation\",\"annotation-xml\",\"mprescripts\",\"none\"]),z=m([\"#text\"]),P=m([\"accept\",\"action\",\"align\",\"alt\",\"autocapitalize\",\"autocomplete\",\"autopictureinpicture\",\"autoplay\",\"background\",\"bgcolor\",\"border\",\"capture\",\"cellpadding\",\"cellspacing\",\"checked\",\"cite\",\"class\",\"clear\",\"color\",\"cols\",\"colspan\",\"controls\",\"controlslist\",\"coords\",\"crossorigin\",\"datetime\",\"decoding\",\"default\",\"dir\",\"disabled\",\"disablepictureinpicture\",\"disableremoteplayback\",\"download\",\"draggable\",\"enctype\",\"enterkeyhint\",\"face\",\"for\",\"headers\",\"height\",\"hidden\",\"high\",\"href\",\"hreflang\",\"id\",\"inputmode\",\"integrity\",\"ismap\",\"kind\",\"label\",\"lang\",\"list\",\"loading\",\"loop\",\"low\",\"max\",\"maxlength\",\"media\",\"method\",\"min\",\"minlength\",\"multiple\",\"muted\",\"name\",\"nonce\",\"noshade\",\"novalidate\",\"nowrap\",\"open\",\"optimum\",\"pattern\",\"placeholder\",\"playsinline\",\"poster\",\"preload\",\"pubdate\",\"radiogroup\",\"readonly\",\"rel\",\"required\",\"rev\",\"reversed\",\"role\",\"rows\",\"rowspan\",\"spellcheck\",\"scope\",\"selected\",\"shape\",\"size\",\"sizes\",\"span\",\"srclang\",\"start\",\"src\",\"srcset\",\"step\",\"style\",\"summary\",\"tabindex\",\"title\",\"translate\",\"type\",\"usemap\",\"valign\",\"value\",\"width\",\"xmlns\",\"slot\"]),j=m([\"accent-height\",\"accumulate\",\"additive\",\"alignment-baseline\",\"ascent\",\"attributename\",\"attributetype\",\"azimuth\",\"basefrequency\",\"baseline-shift\",\"begin\",\"bias\",\"by\",\"class\",\"clip\",\"clippathunits\",\"clip-path\",\"clip-rule\",\"color\",\"color-interpolation\",\"color-interpolation-filters\",\"color-profile\",\"color-rendering\",\"cx\",\"cy\",\"d\",\"dx\",\"dy\",\"diffuseconstant\",\"direction\",\"display\",\"divisor\",\"dur\",\"edgemode\",\"elevation\",\"end\",\"fill\",\"fill-opacity\",\"fill-rule\",\"filter\",\"filterunits\",\"flood-color\",\"flood-opacity\",\"font-family\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-variant\",\"font-weight\",\"fx\",\"fy\",\"g1\",\"g2\",\"glyph-name\",\"glyphref\",\"gradientunits\",\"gradienttransform\",\"height\",\"href\",\"id\",\"image-rendering\",\"in\",\"in2\",\"k\",\"k1\",\"k2\",\"k3\",\"k4\",\"kerning\",\"keypoints\",\"keysplines\",\"keytimes\",\"lang\",\"lengthadjust\",\"letter-spacing\",\"kernelmatrix\",\"kernelunitlength\",\"lighting-color\",\"local\",\"marker-end\",\"marker-mid\",\"marker-start\",\"markerheight\",\"markerunits\",\"markerwidth\",\"maskcontentunits\",\"maskunits\",\"max\",\"mask\",\"media\",\"method\",\"mode\",\"min\",\"name\",\"numoctaves\",\"offset\",\"operator\",\"opacity\",\"order\",\"orient\",\"orientation\",\"origin\",\"overflow\",\"paint-order\",\"path\",\"pathlength\",\"patterncontentunits\",\"patterntransform\",\"patternunits\",\"points\",\"preservealpha\",\"preserveaspectratio\",\"primitiveunits\",\"r\",\"rx\",\"ry\",\"radius\",\"refx\",\"refy\",\"repeatcount\",\"repeatdur\",\"restart\",\"result\",\"rotate\",\"scale\",\"seed\",\"shape-rendering\",\"specularconstant\",\"specularexponent\",\"spreadmethod\",\"startoffset\",\"stddeviation\",\"stitchtiles\",\"stop-color\",\"stop-opacity\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke\",\"stroke-width\",\"style\",\"surfacescale\",\"systemlanguage\",\"tabindex\",\"targetx\",\"targety\",\"transform\",\"transform-origin\",\"text-anchor\",\"text-decoration\",\"text-rendering\",\"textlength\",\"type\",\"u1\",\"u2\",\"unicode\",\"values\",\"viewbox\",\"visibility\",\"version\",\"vert-adv-y\",\"vert-origin-x\",\"vert-origin-y\",\"width\",\"word-spacing\",\"wrap\",\"writing-mode\",\"xchannelselector\",\"ychannelselector\",\"x\",\"x1\",\"x2\",\"xmlns\",\"y\",\"y1\",\"y2\",\"z\",\"zoomandpan\"]),B=m([\"accent\",\"accentunder\",\"align\",\"bevelled\",\"close\",\"columnsalign\",\"columnlines\",\"columnspan\",\"denomalign\",\"depth\",\"dir\",\"display\",\"displaystyle\",\"encoding\",\"fence\",\"frame\",\"height\",\"href\",\"id\",\"largeop\",\"length\",\"linethickness\",\"lspace\",\"lquote\",\"mathbackground\",\"mathcolor\",\"mathsize\",\"mathvariant\",\"maxsize\",\"minsize\",\"movablelimits\",\"notation\",\"numalign\",\"open\",\"rowalign\",\"rowlines\",\"rowspacing\",\"rowspan\",\"rspace\",\"rquote\",\"scriptlevel\",\"scriptminsize\",\"scriptsizemultiplier\",\"selection\",\"separator\",\"separators\",\"stretchy\",\"subscriptshift\",\"supscriptshift\",\"symmetric\",\"voffset\",\"width\",\"xmlns\"]),G=m([\"xlink:href\",\"xml:id\",\"xlink:title\",\"xml:space\",\"xmlns:xlink\"]),W=f(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm),q=f(/<%[\\w\\W]*|[\\w\\W]*%>/gm),Y=f(/\\${[\\w\\W]*}/gm),$=f(/^data-[\\-\\w.\\u00B7-\\uFFFF]/),K=f(/^aria-[\\-\\w]+$/),V=f(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i),X=f(/^(?:\\w+script|data):/i),Z=f(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g),J=f(/^html$/i),Q=function(){return\"undefined\"==typeof window?null:window},ee=function(t,n){if(\"object\"!==e(t)||\"function\"!=typeof t.createPolicy)return null;var r=null,o=\"data-tt-policy-suffix\";n.currentScript&&n.currentScript.hasAttribute(o)&&(r=n.currentScript.getAttribute(o));var a=\"dompurify\"+(r?\"#\"+r:\"\");try{return t.createPolicy(a,{createHTML:function(e){return e},createScriptURL:function(e){return e}})}catch(e){return console.warn(\"TrustedTypes policy \"+a+\" could not be created.\"),null}};var te=function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Q(),r=function(e){return t(e)};if(r.version=\"2.4.5\",r.removed=[],!n||!n.document||9!==n.document.nodeType)return r.isSupported=!1,r;var a=n.document,i=n.document,l=n.DocumentFragment,c=n.HTMLTemplateElement,u=n.Node,s=n.Element,f=n.NodeFilter,p=n.NamedNodeMap,d=void 0===p?n.NamedNodeMap||n.MozNamedAttrMap:p,h=n.HTMLFormElement,g=n.DOMParser,y=n.trustedTypes,L=s.prototype,te=M(L,\"cloneNode\"),ne=M(L,\"nextSibling\"),re=M(L,\"childNodes\"),oe=M(L,\"parentNode\");if(\"function\"==typeof c){var ae=i.createElement(\"template\");ae.content&&ae.content.ownerDocument&&(i=ae.content.ownerDocument)}var ie=ee(y,a),le=ie?ie.createHTML(\"\"):\"\",ce=i,ue=ce.implementation,se=ce.createNodeIterator,me=ce.createDocumentFragment,fe=ce.getElementsByTagName,pe=a.importNode,de={};try{de=D(i).documentMode?i.documentMode:{}}catch(e){}var he={};r.isSupported=\"function\"==typeof oe&&ue&&void 0!==ue.createHTMLDocument&&9!==de;var ge,ye,be=W,Te=q,ve=Y,Ne=$,Ee=K,Ae=X,we=Z,Se=V,_e=null,xe=O({},[].concat(o(R),o(C),o(I),o(U),o(z))),ke=null,Le=O({},[].concat(o(P),o(j),o(B),o(G))),Oe=Object.seal(Object.create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),De=null,Me=null,Re=!0,Ce=!0,Ie=!1,Fe=!0,Ue=!1,He=!1,ze=!1,Pe=!1,je=!1,Be=!1,Ge=!1,We=!0,qe=!1,Ye=\"user-content-\",$e=!0,Ke=!1,Ve={},Xe=null,Ze=O({},[\"annotation-xml\",\"audio\",\"colgroup\",\"desc\",\"foreignobject\",\"head\",\"iframe\",\"math\",\"mi\",\"mn\",\"mo\",\"ms\",\"mtext\",\"noembed\",\"noframes\",\"noscript\",\"plaintext\",\"script\",\"style\",\"svg\",\"template\",\"thead\",\"title\",\"video\",\"xmp\"]),Je=null,Qe=O({},[\"audio\",\"video\",\"img\",\"source\",\"image\",\"track\"]),et=null,tt=O({},[\"alt\",\"class\",\"for\",\"id\",\"label\",\"name\",\"pattern\",\"placeholder\",\"role\",\"summary\",\"title\",\"value\",\"style\",\"xmlns\"]),nt=\"http://www.w3.org/1998/Math/MathML\",rt=\"http://www.w3.org/2000/svg\",ot=\"http://www.w3.org/1999/xhtml\",at=ot,it=!1,lt=null,ct=O({},[nt,rt,ot],E),ut=[\"application/xhtml+xml\",\"text/html\"],st=\"text/html\",mt=null,ft=i.createElement(\"form\"),pt=function(e){return e instanceof RegExp||e instanceof Function},dt=function(t){mt&&mt===t||(t&&\"object\"===e(t)||(t={}),t=D(t),ge=ge=-1===ut.indexOf(t.PARSER_MEDIA_TYPE)?st:t.PARSER_MEDIA_TYPE,ye=\"application/xhtml+xml\"===ge?E:N,_e=\"ALLOWED_TAGS\"in t?O({},t.ALLOWED_TAGS,ye):xe,ke=\"ALLOWED_ATTR\"in t?O({},t.ALLOWED_ATTR,ye):Le,lt=\"ALLOWED_NAMESPACES\"in t?O({},t.ALLOWED_NAMESPACES,E):ct,et=\"ADD_URI_SAFE_ATTR\"in t?O(D(tt),t.ADD_URI_SAFE_ATTR,ye):tt,Je=\"ADD_DATA_URI_TAGS\"in t?O(D(Qe),t.ADD_DATA_URI_TAGS,ye):Qe,Xe=\"FORBID_CONTENTS\"in t?O({},t.FORBID_CONTENTS,ye):Ze,De=\"FORBID_TAGS\"in t?O({},t.FORBID_TAGS,ye):{},Me=\"FORBID_ATTR\"in t?O({},t.FORBID_ATTR,ye):{},Ve=\"USE_PROFILES\"in t&&t.USE_PROFILES,Re=!1!==t.ALLOW_ARIA_ATTR,Ce=!1!==t.ALLOW_DATA_ATTR,Ie=t.ALLOW_UNKNOWN_PROTOCOLS||!1,Fe=!1!==t.ALLOW_SELF_CLOSE_IN_ATTR,Ue=t.SAFE_FOR_TEMPLATES||!1,He=t.WHOLE_DOCUMENT||!1,je=t.RETURN_DOM||!1,Be=t.RETURN_DOM_FRAGMENT||!1,Ge=t.RETURN_TRUSTED_TYPE||!1,Pe=t.FORCE_BODY||!1,We=!1!==t.SANITIZE_DOM,qe=t.SANITIZE_NAMED_PROPS||!1,$e=!1!==t.KEEP_CONTENT,Ke=t.IN_PLACE||!1,Se=t.ALLOWED_URI_REGEXP||Se,at=t.NAMESPACE||ot,Oe=t.CUSTOM_ELEMENT_HANDLING||{},t.CUSTOM_ELEMENT_HANDLING&&pt(t.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(Oe.tagNameCheck=t.CUSTOM_ELEMENT_HANDLING.tagNameCheck),t.CUSTOM_ELEMENT_HANDLING&&pt(t.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(Oe.attributeNameCheck=t.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),t.CUSTOM_ELEMENT_HANDLING&&\"boolean\"==typeof t.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(Oe.allowCustomizedBuiltInElements=t.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),Ue&&(Ce=!1),Be&&(je=!0),Ve&&(_e=O({},o(z)),ke=[],!0===Ve.html&&(O(_e,R),O(ke,P)),!0===Ve.svg&&(O(_e,C),O(ke,j),O(ke,G)),!0===Ve.svgFilters&&(O(_e,I),O(ke,j),O(ke,G)),!0===Ve.mathMl&&(O(_e,U),O(ke,B),O(ke,G))),t.ADD_TAGS&&(_e===xe&&(_e=D(_e)),O(_e,t.ADD_TAGS,ye)),t.ADD_ATTR&&(ke===Le&&(ke=D(ke)),O(ke,t.ADD_ATTR,ye)),t.ADD_URI_SAFE_ATTR&&O(et,t.ADD_URI_SAFE_ATTR,ye),t.FORBID_CONTENTS&&(Xe===Ze&&(Xe=D(Xe)),O(Xe,t.FORBID_CONTENTS,ye)),$e&&(_e[\"#text\"]=!0),He&&O(_e,[\"html\",\"head\",\"body\"]),_e.table&&(O(_e,[\"tbody\"]),delete De.tbody),m&&m(t),mt=t)},ht=O({},[\"mi\",\"mo\",\"mn\",\"ms\",\"mtext\"]),gt=O({},[\"foreignobject\",\"desc\",\"title\",\"annotation-xml\"]),yt=O({},[\"title\",\"style\",\"font\",\"a\",\"script\"]),bt=O({},C);O(bt,I),O(bt,F);var Tt=O({},U);O(Tt,H);var vt=function(e){var t=oe(e);t&&t.tagName||(t={namespaceURI:at,tagName:\"template\"});var n=N(e.tagName),r=N(t.tagName);return!!lt[e.namespaceURI]&&(e.namespaceURI===rt?t.namespaceURI===ot?\"svg\"===n:t.namespaceURI===nt?\"svg\"===n&&(\"annotation-xml\"===r||ht[r]):Boolean(bt[n]):e.namespaceURI===nt?t.namespaceURI===ot?\"math\"===n:t.namespaceURI===rt?\"math\"===n&&gt[r]:Boolean(Tt[n]):e.namespaceURI===ot?!(t.namespaceURI===rt&&!gt[r])&&(!(t.namespaceURI===nt&&!ht[r])&&(!Tt[n]&&(yt[n]||!bt[n]))):!(\"application/xhtml+xml\"!==ge||!lt[e.namespaceURI]))},Nt=function(e){v(r.removed,{element:e});try{e.parentNode.removeChild(e)}catch(t){try{e.outerHTML=le}catch(t){e.remove()}}},Et=function(e,t){try{v(r.removed,{attribute:t.getAttributeNode(e),from:t})}catch(e){v(r.removed,{attribute:null,from:t})}if(t.removeAttribute(e),\"is\"===e&&!ke[e])if(je||Be)try{Nt(t)}catch(e){}else try{t.setAttribute(e,\"\")}catch(e){}},At=function(e){var t,n;if(Pe)e=\"<remove></remove>\"+e;else{var r=A(e,/^[\\r\\n\\t ]+/);n=r&&r[0]}\"application/xhtml+xml\"===ge&&at===ot&&(e='<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>'+e+\"</body></html>\");var o=ie?ie.createHTML(e):e;if(at===ot)try{t=(new g).parseFromString(o,ge)}catch(e){}if(!t||!t.documentElement){t=ue.createDocument(at,\"template\",null);try{t.documentElement.innerHTML=it?le:o}catch(e){}}var a=t.body||t.documentElement;return e&&n&&a.insertBefore(i.createTextNode(n),a.childNodes[0]||null),at===ot?fe.call(t,He?\"html\":\"body\")[0]:He?t.documentElement:a},wt=function(e){return se.call(e.ownerDocument||e,e,f.SHOW_ELEMENT|f.SHOW_COMMENT|f.SHOW_TEXT,null,!1)},St=function(e){return e instanceof h&&(\"string\"!=typeof e.nodeName||\"string\"!=typeof e.textContent||\"function\"!=typeof e.removeChild||!(e.attributes instanceof d)||\"function\"!=typeof e.removeAttribute||\"function\"!=typeof e.setAttribute||\"string\"!=typeof e.namespaceURI||\"function\"!=typeof e.insertBefore||\"function\"!=typeof e.hasChildNodes)},_t=function(t){return\"object\"===e(u)?t instanceof u:t&&\"object\"===e(t)&&\"number\"==typeof t.nodeType&&\"string\"==typeof t.nodeName},xt=function(e,t,n){he[e]&&b(he[e],(function(e){e.call(r,t,n,mt)}))},kt=function(e){var t;if(xt(\"beforeSanitizeElements\",e,null),St(e))return Nt(e),!0;if(x(/[\\u0080-\\uFFFF]/,e.nodeName))return Nt(e),!0;var n=ye(e.nodeName);if(xt(\"uponSanitizeElement\",e,{tagName:n,allowedTags:_e}),e.hasChildNodes()&&!_t(e.firstElementChild)&&(!_t(e.content)||!_t(e.content.firstElementChild))&&x(/<[/\\w]/g,e.innerHTML)&&x(/<[/\\w]/g,e.textContent))return Nt(e),!0;if(\"select\"===n&&x(/<template/i,e.innerHTML))return Nt(e),!0;if(!_e[n]||De[n]){if(!De[n]&&Ot(n)){if(Oe.tagNameCheck instanceof RegExp&&x(Oe.tagNameCheck,n))return!1;if(Oe.tagNameCheck instanceof Function&&Oe.tagNameCheck(n))return!1}if($e&&!Xe[n]){var o=oe(e)||e.parentNode,a=re(e)||e.childNodes;if(a&&o)for(var i=a.length-1;i>=0;--i)o.insertBefore(te(a[i],!0),ne(e))}return Nt(e),!0}return e instanceof s&&!vt(e)?(Nt(e),!0):\"noscript\"!==n&&\"noembed\"!==n||!x(/<\\/no(script|embed)/i,e.innerHTML)?(Ue&&3===e.nodeType&&(t=e.textContent,t=w(t,be,\" \"),t=w(t,Te,\" \"),t=w(t,ve,\" \"),e.textContent!==t&&(v(r.removed,{element:e.cloneNode()}),e.textContent=t)),xt(\"afterSanitizeElements\",e,null),!1):(Nt(e),!0)},Lt=function(e,t,n){if(We&&(\"id\"===t||\"name\"===t)&&(n in i||n in ft))return!1;if(Ce&&!Me[t]&&x(Ne,t));else if(Re&&x(Ee,t));else if(!ke[t]||Me[t]){if(!(Ot(e)&&(Oe.tagNameCheck instanceof RegExp&&x(Oe.tagNameCheck,e)||Oe.tagNameCheck instanceof Function&&Oe.tagNameCheck(e))&&(Oe.attributeNameCheck instanceof RegExp&&x(Oe.attributeNameCheck,t)||Oe.attributeNameCheck instanceof Function&&Oe.attributeNameCheck(t))||\"is\"===t&&Oe.allowCustomizedBuiltInElements&&(Oe.tagNameCheck instanceof RegExp&&x(Oe.tagNameCheck,n)||Oe.tagNameCheck instanceof Function&&Oe.tagNameCheck(n))))return!1}else if(et[t]);else if(x(Se,w(n,we,\"\")));else if(\"src\"!==t&&\"xlink:href\"!==t&&\"href\"!==t||\"script\"===e||0!==S(n,\"data:\")||!Je[e]){if(Ie&&!x(Ae,w(n,we,\"\")));else if(n)return!1}else;return!0},Ot=function(e){return e.indexOf(\"-\")>0},Dt=function(t){var n,o,a,i;xt(\"beforeSanitizeAttributes\",t,null);var l=t.attributes;if(l){var c={attrName:\"\",attrValue:\"\",keepAttr:!0,allowedAttributes:ke};for(i=l.length;i--;){var u=n=l[i],s=u.name,m=u.namespaceURI;if(o=\"value\"===s?n.value:_(n.value),a=ye(s),c.attrName=a,c.attrValue=o,c.keepAttr=!0,c.forceKeepAttr=void 0,xt(\"uponSanitizeAttribute\",t,c),o=c.attrValue,!c.forceKeepAttr&&(Et(s,t),c.keepAttr))if(Fe||!x(/\\/>/i,o)){Ue&&(o=w(o,be,\" \"),o=w(o,Te,\" \"),o=w(o,ve,\" \"));var f=ye(t.nodeName);if(Lt(f,a,o)){if(!qe||\"id\"!==a&&\"name\"!==a||(Et(s,t),o=Ye+o),ie&&\"object\"===e(y)&&\"function\"==typeof y.getAttributeType)if(m);else switch(y.getAttributeType(f,a)){case\"TrustedHTML\":o=ie.createHTML(o);break;case\"TrustedScriptURL\":o=ie.createScriptURL(o)}try{m?t.setAttributeNS(m,s,o):t.setAttribute(s,o),T(r.removed)}catch(e){}}}else Et(s,t)}xt(\"afterSanitizeAttributes\",t,null)}},Mt=function e(t){var n,r=wt(t);for(xt(\"beforeSanitizeShadowDOM\",t,null);n=r.nextNode();)xt(\"uponSanitizeShadowNode\",n,null),kt(n)||(n.content instanceof l&&e(n.content),Dt(n));xt(\"afterSanitizeShadowDOM\",t,null)};return r.sanitize=function(t){var o,i,c,s,m,f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if((it=!t)&&(t=\"\\x3c!--\\x3e\"),\"string\"!=typeof t&&!_t(t)){if(\"function\"!=typeof t.toString)throw k(\"toString is not a function\");if(\"string\"!=typeof(t=t.toString()))throw k(\"dirty is not a string, aborting\")}if(!r.isSupported){if(\"object\"===e(n.toStaticHTML)||\"function\"==typeof n.toStaticHTML){if(\"string\"==typeof t)return n.toStaticHTML(t);if(_t(t))return n.toStaticHTML(t.outerHTML)}return t}if(ze||dt(f),r.removed=[],\"string\"==typeof t&&(Ke=!1),Ke){if(t.nodeName){var p=ye(t.nodeName);if(!_e[p]||De[p])throw k(\"root node is forbidden and cannot be sanitized in-place\")}}else if(t instanceof u)1===(i=(o=At(\"\\x3c!----\\x3e\")).ownerDocument.importNode(t,!0)).nodeType&&\"BODY\"===i.nodeName||\"HTML\"===i.nodeName?o=i:o.appendChild(i);else{if(!je&&!Ue&&!He&&-1===t.indexOf(\"<\"))return ie&&Ge?ie.createHTML(t):t;if(!(o=At(t)))return je?null:Ge?le:\"\"}o&&Pe&&Nt(o.firstChild);for(var d=wt(Ke?t:o);c=d.nextNode();)3===c.nodeType&&c===s||kt(c)||(c.content instanceof l&&Mt(c.content),Dt(c),s=c);if(s=null,Ke)return t;if(je){if(Be)for(m=me.call(o.ownerDocument);o.firstChild;)m.appendChild(o.firstChild);else m=o;return(ke.shadowroot||ke.shadowrootmod)&&(m=pe.call(a,m,!0)),m}var h=He?o.outerHTML:o.innerHTML;return He&&_e[\"!doctype\"]&&o.ownerDocument&&o.ownerDocument.doctype&&o.ownerDocument.doctype.name&&x(J,o.ownerDocument.doctype.name)&&(h=\"<!DOCTYPE \"+o.ownerDocument.doctype.name+\">\\n\"+h),Ue&&(h=w(h,be,\" \"),h=w(h,Te,\" \"),h=w(h,ve,\" \")),ie&&Ge?ie.createHTML(h):h},r.setConfig=function(e){dt(e),ze=!0},r.clearConfig=function(){mt=null,ze=!1},r.isValidAttribute=function(e,t,n){mt||dt({});var r=ye(e),o=ye(t);return Lt(r,o,n)},r.addHook=function(e,t){\"function\"==typeof t&&(he[e]=he[e]||[],v(he[e],t))},r.removeHook=function(e){if(he[e])return T(he[e])},r.removeHooks=function(e){he[e]&&(he[e]=[])},r.removeAllHooks=function(){he={}},r}();return te}));\n//# sourceMappingURL=purify.min.js.map\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","/**\n * marked v4.2.12 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n"],"names":["module","exports","e","t","Symbol","iterator","constructor","prototype","n","Object","setPrototypeOf","__proto__","Reflect","construct","sham","Proxy","Boolean","valueOf","call","r","o","a","push","apply","Function","bind","arguments","Array","isArray","from","toString","slice","name","test","TypeError","length","i","hasOwnProperty","l","c","isFrozen","u","getPrototypeOf","s","getOwnPropertyDescriptor","m","freeze","f","seal","p","create","d","h","g","y","b","L","forEach","T","pop","v","N","String","toLowerCase","E","A","match","w","replace","S","indexOf","_","trim","x","RegExp","k","O","D","M","get","value","R","C","I","F","U","H","z","P","j","B","G","W","q","Y","$","K","V","X","Z","J","Q","window","ee","createPolicy","currentScript","hasAttribute","getAttribute","createHTML","createScriptURL","te","version","removed","document","nodeType","isSupported","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ne","re","oe","ae","createElement","content","ownerDocument","ie","le","ce","ue","implementation","se","createNodeIterator","me","createDocumentFragment","fe","getElementsByTagName","pe","importNode","de","documentMode","he","createHTMLDocument","ge","ye","be","Te","ve","Ne","Ee","Ae","we","Se","_e","xe","concat","ke","Le","Oe","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","De","Me","Re","Ce","Ie","Fe","Ue","He","ze","Pe","je","Be","Ge","We","qe","Ye","$e","Ke","Ve","Xe","Ze","Je","Qe","et","tt","nt","rt","ot","at","it","lt","ct","ut","st","mt","ft","pt","dt","PARSER_MEDIA_TYPE","ALLOWED_TAGS","ALLOWED_ATTR","ALLOWED_NAMESPACES","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","FORBID_CONTENTS","FORBID_TAGS","FORBID_ATTR","USE_PROFILES","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","FORCE_BODY","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","ALLOWED_URI_REGEXP","NAMESPACE","CUSTOM_ELEMENT_HANDLING","html","svg","svgFilters","mathMl","ADD_TAGS","ADD_ATTR","table","tbody","ht","gt","yt","bt","Tt","vt","tagName","namespaceURI","Nt","element","parentNode","removeChild","outerHTML","remove","Et","attribute","getAttributeNode","removeAttribute","setAttribute","At","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","wt","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","St","nodeName","textContent","attributes","hasChildNodes","_t","xt","kt","allowedTags","firstElementChild","Ot","cloneNode","Lt","Dt","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","Mt","nextNode","sanitize","toStaticHTML","appendChild","firstChild","shadowroot","shadowrootmod","doctype","setConfig","clearConfig","isValidAttribute","addHook","removeHook","removeHooks","removeAllHooks","Prism","_self","lang","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","alias","map","objId","obj","defineProperty","clone","deepClone","visited","id","key","getLanguage","exec","className","parentElement","setLanguage","language","classList","add","Error","err","src","stack","scripts","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","querySelectorAll","highlightElement","parent","code","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","to","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","tag","classes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","markup","includedCdataInside","def","mathml","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","regex","js","matches","msMatchesSelector","webkitMatchesSelector","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","extension","autoloader","loadLanguages","success","error","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","loadFile","range","start","Number","comma","end","undefined","parseRange","lines","split","Math","max","min","fileHighlight","logged","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","unescapeTest","unescape","charAt","fromCharCode","parseInt","substring","caret","edit","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","merge","target","splitCells","tableRow","cells","offset","escaped","curr","shift","splice","invert","suffLen","currChar","checkSanitizeDeprecation","repeatString","result","outputLink","cap","link","raw","lexer","title","state","inLink","inlineTokens","Tokenizer","options","space","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","indentCodeCompensation","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","items","itemRegex","repeat","trimLeft","search","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","item","header","align","rows","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","static","lex","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","listitem","checkbox","tablerow","tablecell","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parseInline","l2","l3","cell","itemBody","renderers","parser","unshift","marked","done","pending","onError","Promise","then","catch","setOptions","newDefaults","use","args","childTokens","pack","opts","ext","prevRenderer","prop","prevTokenizer","values","lexInline"],"sourceRoot":""}